name: Reusable Gradle Workflow

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Allow gradlew execution
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build

      - name: Run Tests
        run: ./gradlew test
  
      - name: Check and Create SonarCloud Project
        id: check_create_sonar_project
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" \
          -H "Authorization: Bearer ${{ secrets.SONAR_TOKEN }}" \
          "https://sonarcloud.io/api/projects/search?projects=${{ github.event.repository.name }}&organization=migracao-net")
            if [ "$response" -eq 200 ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "SonarCloud project already exists."
            else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "SonarCloud project does not exist. Creating..."
          create_response=$(curl -s -o /dev/null -w "%{http_code}" -X POST "https://sonarcloud.io/api/projects/create" \
            -H "Authorization: Bearer ${{ secrets.SONAR_TOKEN }}" \
            -d "organization=migracao-net" \
            -d "project=${{ github.event.repository.name }}" \
            -d "name=${{ github.event.repository.name }}")
          if [ "$create_response" -eq 200 ]; then
            echo "SonarCloud project created successfully."
          else
            echo "Failed to create SonarCloud project. Response code: $create_response"
            exit 1
          fi
            fi

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.organization=migracao-net
            -Dsonar.projectKey=${{ github.event.repository.name }}
            -Dsonar.projectName=${{ github.event.repository.name }}
            -Dsonar.sources=src/main/java
            -Dsonar.tests=src/test/java
            -Dsonar.java.binaries=build/classes
            -Dsonar.branch.name=${{ github.ref_name }}
            -Dsonar.verbose=true

      - name: Upload artifact
        if: |
          success() && !cancelled()
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: build/libs

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Download Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build-output
  #         path: ./build/libs

  #     - name: Deploy
  #       run: |
  #         echo "Realizando deploy..."
  #         # Adicione aqui lógica específica de deploy (ex: Docker push, SCP, etc.)
